/*
 * File: MidpointFindingKarel.java
 * -------------------------------
 * When you finish writing it, the MidpointFindingKarel class should
 * leave a beeper on the corner closest to the center of 1st Street
 * (or either of the two central corners if 1st Street has an even
 * number of corners).  Karel can put down additional beepers as it
 * looks for the midpoint, but must pick them up again before it
 * stops.  The world may be of any size, but you are allowed to
 * assume that it is at least as tall as it is wide.
 */

import stanford.karel.*;

public class CollectNewspaperKarel extends SuperKarel {
	public void run() {

		//go to beeper
		while(frontIsClear()) {
			move();
		}
		if (rightIsClear()) {
			turnRight();
			while(leftIsBlocked()) {
				move();
			}
			if(leftIsClear()) {
				turnLeft();
				move();
			}
			if(beepersPresent()) {
				pickBeeper();
			}
		}

		//go back home
		turnAround();
		while(frontIsClear()) {
			move();
		}
		turnRight();
		while(frontIsClear()) {
			move();
		}

		//end position
		turnRight();
	}

     }


